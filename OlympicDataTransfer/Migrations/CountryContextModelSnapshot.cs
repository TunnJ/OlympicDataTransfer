// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicDataTransfer.Models;

namespace OlympicDataTransfer.Migrations
{
    [DbContext(typeof(CountryContext))]
    partial class CountryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicDataTransfer.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "in",
                            CatName = "Indoor Olympics"
                        },
                        new
                        {
                            CategoryID = "out",
                            CatName = "Outdoor Olympic Games"
                        });
                });

            modelBuilder.Entity("OlympicDataTransfer.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "ca",
                            CategoryID = "in",
                            CountryName = "Canada",
                            FlagImage = "Canada.png",
                            GameID = "win"
                        },
                        new
                        {
                            CountryID = "sw",
                            CategoryID = "in",
                            CountryName = "Sweden",
                            FlagImage = "Sweden.png",
                            GameID = "win"
                        },
                        new
                        {
                            CountryID = "gb",
                            CategoryID = "in",
                            CountryName = "Great Britain",
                            FlagImage = "GreatBritain.png",
                            GameID = "win"
                        },
                        new
                        {
                            CountryID = "jam",
                            CategoryID = "out",
                            CountryName = "Jamaica",
                            FlagImage = "Jamaica.png",
                            GameID = "win"
                        },
                        new
                        {
                            CountryID = "it",
                            CategoryID = "out",
                            CountryName = "Italy",
                            FlagImage = "Italy.png",
                            GameID = "win"
                        },
                        new
                        {
                            CountryID = "jap",
                            CategoryID = "out",
                            CountryName = "Japan",
                            FlagImage = "Japan.png",
                            GameID = "win"
                        },
                        new
                        {
                            CountryID = "ger",
                            CategoryID = "in",
                            CountryName = "Germany",
                            FlagImage = "Germany.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "ch",
                            CategoryID = "in",
                            CountryName = "China",
                            FlagImage = "China.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "mex",
                            CategoryID = "in",
                            CountryName = "Mexico",
                            FlagImage = "Mexico.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "bra",
                            CategoryID = "out",
                            CountryName = "Brazil",
                            FlagImage = "Brazil.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "net",
                            CategoryID = "out",
                            CountryName = "Netherlands",
                            FlagImage = "Netherlands.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryID = "out",
                            CountryName = "USA",
                            FlagImage = "Usa.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "th",
                            CategoryID = "in",
                            CountryName = "Thailand",
                            FlagImage = "Thailand.png",
                            GameID = "par"
                        },
                        new
                        {
                            CountryID = "ur",
                            CategoryID = "in",
                            CountryName = "Uruguay",
                            FlagImage = "Uruguay.png",
                            GameID = "par"
                        },
                        new
                        {
                            CountryID = "uk",
                            CategoryID = "in",
                            CountryName = "Ukraine",
                            FlagImage = "Ukraine.png",
                            GameID = "par"
                        },
                        new
                        {
                            CountryID = "au",
                            CategoryID = "out",
                            CountryName = "Austria",
                            FlagImage = "Austria.png",
                            GameID = "par"
                        },
                        new
                        {
                            CountryID = "pa",
                            CategoryID = "out",
                            CountryName = "Pakistan",
                            FlagImage = "Pakistan.png",
                            GameID = "par"
                        },
                        new
                        {
                            CountryID = "zim",
                            CategoryID = "out",
                            CountryName = "Zimbabwe",
                            FlagImage = "Zimbabwe.png",
                            GameID = "par"
                        },
                        new
                        {
                            CountryID = "fr",
                            CategoryID = "in",
                            CountryName = "France",
                            FlagImage = "France.png",
                            GameID = "yth"
                        },
                        new
                        {
                            CountryID = "cy",
                            CategoryID = "in",
                            CountryName = "Cyprus",
                            FlagImage = "Cyprus.png",
                            GameID = "yth"
                        },
                        new
                        {
                            CountryID = "rus",
                            CategoryID = "in",
                            CountryName = "Russia",
                            FlagImage = "Russia.png",
                            GameID = "yth"
                        },
                        new
                        {
                            CountryID = "fin",
                            CategoryID = "out",
                            CountryName = "Finland",
                            FlagImage = "Finland.png",
                            GameID = "yth"
                        },
                        new
                        {
                            CountryID = "slo",
                            CategoryID = "out",
                            CountryName = "Slovakia",
                            FlagImage = "Slovakia.png",
                            GameID = "yth"
                        },
                        new
                        {
                            CountryID = "por",
                            CategoryID = "out",
                            CountryName = "Portugal",
                            FlagImage = "Portugal.png",
                            GameID = "yth"
                        });
                });

            modelBuilder.Entity("OlympicDataTransfer.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "win",
                            GameName = "Winter Olympics"
                        },
                        new
                        {
                            GameID = "sum",
                            GameName = "Summer Olympics"
                        },
                        new
                        {
                            GameID = "par",
                            GameName = "Paralympic Games"
                        },
                        new
                        {
                            GameID = "yth",
                            GameName = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("OlympicDataTransfer.Models.Country", b =>
                {
                    b.HasOne("OlympicDataTransfer.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("OlympicDataTransfer.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");
                });
#pragma warning restore 612, 618
        }
    }
}
